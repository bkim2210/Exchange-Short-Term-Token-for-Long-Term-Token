# Import necessary libraries
import requests
import json
import datetime
from datetime import date

# Function to get API credentials
def getCreds():
    creds = dict()
    creds['access_token'] = 'Enter Token (page token or access token)'
    creds['client_id'] = 'Enter Apps client'  # client id from facebook app IG Graph API Test
    creds['client_secret'] = 'Enter Apps client secret'  # client secret from facebook app
    creds['graph_domain'] = 'https://graph.facebook.com/'  # base domain for api calls
    creds['graph_version'] = 'v17.0'  # version of the api we are hitting
    creds['endpoint_base'] = creds['graph_domain'] + creds['graph_version'] + '/'  # base endpoint with domain and version
    creds['debug'] = 'no'  # debug mode for api call
    creds['page_id'] = 'Enter Page Id'  # user's page id
    creds['instagram_account_id'] = 'Enter Instagram Account Id'  # user's instagram account id
    creds['User_id'] = 'Enter User id'
    return creds

# Function to make API call
def makeApiCall(url, endpointParams, debug='no'):
    data = requests.get(url, endpointParams)  # make get request

    response = dict()  # hold response info
    response['url'] = url  # url we are hitting
    response['endpoint_params'] = endpointParams  # parameters for the endpoint
    response['endpoint_params_pretty'] = json.dumps(endpointParams, indent=4)  # pretty print for cli
    response['json_data'] = json.loads(data.content)  # response data from the api
    response['json_data_pretty'] = json.dumps(response['json_data'], indent=4)  # pretty print for cli
    if 'yes' == debug:  # display out response info
        displayApiCallData(response)  # display response

    return response  # get and return content

# Function to display API call data
def displayApiCallData(response):
    """Print out to CLI response from API call"""

    print("\nURL: ")  # title
    print(response['url'])  # display URL hit
    print("\nEndpoint Params: ")  # title
    print(response['endpoint_params_pretty'])  # display params passed to the endpoint
    print("\nResponse: ")  # title
    print(response['json_data_pretty'])  # make it look pretty for CLI

# Function to debug access token
def debugAccessToken(params):
    endpointParams = dict()  # parameter to send to the endpoint
    endpointParams['input_token'] = params['access_token']  # input token is the access token
    endpointParams['access_token'] = params['access_token']  # access token to get debug info on

    url = params['graph_domain'] + '/debug_token'  # endpoint url

    return makeApiCall(url, endpointParams, params['debug'])  # make the api call

# Get credentials
params = getCreds()
params['debug'] = 'yes'  # set debug
response = debugAccessToken(params)  # hit the api for some data!

print("\nToken Access Expires at: ")  # label
print(datetime.datetime.fromtimestamp(response['json_data']['data']['expires_at']))  # display out when the token expires

# Function to get long-lived access token
def getLongLivedAccessToken(params):
    endpointParams = dict()  # parameter to send to the endpoint
    endpointParams['grant_type'] = 'fb_exchange_token'  # tell facebook we want to exchange token
    endpointParams['client_id'] = params['client_id']  # client id from facebook app
    endpointParams['client_secret'] = params['client_secret']  # client secret from facebook app
    endpointParams['fb_exchange_token'] = params['access_token']  # access token to get exchange for a long-lived token

    url = params['endpoint_base'] + 'oauth/access_token'  # endpoint url

    return makeApiCall(url, endpointParams, params['debug'])  # make the api call

# Get credentials again
params = getCreds()
params['debug'] = 'yes'  # set debug
response = getLongLivedAccessToken(params)  # hit the api for some data!

# Display access token info
if 'access_token' in response['json_data']:
    print("\n ---- ACCESS TOKEN INFO ----\n")  # section header
    print("Access Token:")  # label
    print(response['json_data']['access_token'])  # display access token
else:
    print("Access token not found in the API response.")
